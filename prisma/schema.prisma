// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id                String    @id @default(uuid())
  name              String
  email             String    @unique
  password          String
  image             String
  acceptedTerms     Boolean   @map("accepted_terms")
  emailVerified     Boolean   @default(false) @map("email_verified")
  emailVerifyToken  String?   @map("email_verify_token")
  emailVerifyExpiry DateTime? @map("email_verify_expiry")
  role              Role      @default(USER)

  Post Post[]

  Comments Comment[]

  @@map("users")
}

model Post {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  title     String
  content   String
  published Boolean  @default(false)

  author   User?   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String? @map("author_id")

  Comments Comment[]

  @@map("posts")
}

model Comment {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  content   String

  author   User?   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String? @map("author_id")

  post   Post?   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String? @map("post_id")

  commentParent   Comment?  @relation("CommentParent", fields: [commentParentId], references: [id], onDelete: Cascade)
  commentParentId String?   @map("comment_parent_id")
  Comments        Comment[] @relation("CommentParent")

  @@map("comments")
}
